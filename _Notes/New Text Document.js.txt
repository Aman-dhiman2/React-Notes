import { ethers } from "ethers";

import { TiArrowForward, TiBriefcase } from "react-icons/ti";
import { AiOutlineGlobal } from "react-icons/ai";
import { AiOutlineDeploymentUnit } from "react-icons/ai";
import {
  RiNotification2Line,
  RiMoneyDollarCircleFill,
  RiSettings2Line,
  RiLockPasswordLine,
  RiHomeSmileLine,
  RiPhoneFindLine,
  RiAlignLeft,
  RiContactsLine,
  RiWallet3Line,
} from "react-icons/ri";

import { MdAddTask, MdHourglassEmpty, MdOutlineSavings } from "react-icons/md";

/*
Data
*/

  // A Web3Provider wraps a standard Web3 provider, which is
  // what MetaMask injects as window.ethereum into each page
  const provider = new ethers.providers.Web3Provider(window.ethereum);

  const address = "0x7ebC50cAd5D1D32078AccC3C428168Db7E0f2162";
   const abi =
    '[{"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"},{"internalType":"address","name":"_treasurer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"investor","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"Invested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Reward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"withdrawer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"referral","type":"bytes32"}],"name":"addReferral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"blacklist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_add","type":"address"},{"internalType":"bool","name":"_blacklist","type":"bool"}],"name":"blacklistUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"index","type":"uint16"}],"name":"dailyCollection","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"myRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"referralLink","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasurer","type":"address"}],"name":"setTreasurer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"topup","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasurer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_add","type":"address"}],"name":"userDetails","outputs":[{"internalType":"uint256","name":"deposited","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"referralReward","type":"uint256"},{"internalType":"uint256","name":"claimed","type":"uint256"},{"internalType":"uint256","name":"reward","type":"uint256"},{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes32","name":"link","type":"bytes32"},{"internalType":"uint256","name":"referredCount","type":"uint256"},{"internalType":"bytes32","name":"referred","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawAll","outputs":[],"stateMutability":"nonpayable","type":"function"}]';
      // }

  async function connectWallet() {
    // MetaMask requires requesting permission to connect users accounts
    await provider.send("eth_requestAccounts", []);

    console.log(addr);
    setAddr(addr);

    const userDetails = await contract.userDetails(addr);
    const amount = userDetails.deposited.toNumber() / 10 ** 10;
    setDeposite(amount);
    setRoi(amount * 0.005);
    setReferralReward(
      (parseFloat(userDetails.referralReward) / 10 ** 10) * 0.005
    );
    setClaimed(userDetails.claimed.toNumber() / 10 ** 10);
    setReward(
      (parseFloat(userDetails.referralReward) / 10 ** 10) * 0.005 +
        amount * 0.005
    );
    setReferredCount(userDetails.referredCount.toNumber());
    // const reff = await contract.referralLink("0x1d95eAbc614834Bf8Fb64d171D5577432187C436");

    // const ref = signerContract.setTreasurer("0x106aa65493c0096d4a777dCA393A4687eF7E8839");
    // console.log("ref: ", ref);
  }

  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));
    // MetaMask requires requesting permission to connect users accounts

    // const reff = await contract.owner();
    // console.log("lol: ", reff);

    // Each DAI has 18 decimal places
    const tokenAddress = await contract.token();
    // const tokens = ethers.utils.parseUnits("100", 10);
    const tokens = 100 * 10 ** 10;
    console.log(tokens);
    const tokenContract = new ethers.Contract(
      tokenAddress,
      tokenAbi,
      provider
    ).connect(signer);
    await tokenContract.approve(address, tokens);
    
    await sleep(15000);

    // const addr = "0xDC09B74bA5618D969979CF3495Ea3Dd14BC94312";
    let reffAddress = window.location.href.replace(window.location.origin, "");
    reffAddress = reffAddress.replace("/", "");
    if (reffAddress == "") {
      reffAddress = "0xDC09B74bA5618D969979CF3495Ea3Dd14BC94312";
    }
    const reff = await contract.referralLink(reffAddress);
    const userAddress = await signer.getAddress();
    const signerContract = contract.connect(signer);
    await signerContract.addReferral(userAddress, 100, reff);
  }

  async function topup() {
          tokenAddress,
      tokenAbi,
      provider
    ).connect(signer);
    await tokenContract.approve(address, tokens);

    await sleep(15000);
    const signerContract = contract.connect(signer);
    await signerContract.topup(userAddress, 100);
  }

  async function withdraw() {
    // MetaMask requires requesting permission to connect users accounts
    await provider.send("eth_requestAccounts", []);

    // The MetaMask plugin also allows signing transactions to
    // send ether and pay to change state within the blockchain.
    // For this, you need the account signer...
    const signer = provider.getSigner();

    const signerContract = contract.connect(signer);
    await signerContract.claim();
  }

  return (
    <>
      <header className="header-one">
        </div>
              <div className="col-xl-10 col-lg-10 col-md-9">
                <div className="header-right ">
                  <button
                    className="top-btn coin-btn"
                    onClick={() => connectWallet()}
                  >
                    CONEECT WALLET <RiWallet3Line />
                  </button>
                </div>
                <div className="header_menu f-right">
                  <nav id="mobile-menu">
                    <ul className="main-menu">
                      <li className="menu-item-has-children">
                        <a href="/Home">
                          Home <RiHomeSmileLine />{" "}
                        </a>
                      </li>
                      <li className="resulta">
                        <a href="about.html">
                          About us <RiPhoneFindLine />
                        </a>
                      </li>
                      <li className="menu-item-has-children">
                        <a href="#">
                          Pages <RiAlignLeft />
                        </a>
                        <ul className="submenu">
                          <li>
                            <a href="user-panel.html">User panel</a>
                                                    </ul>
                      </li>
                      {/* <li className="menu-item-has-children">
                        <a href="#">Blog</a>
                        <ul className="submenu">
                          <li>
                            <a href="blog-details.html">Blog Details</a>
                          </li>
                        </ul>
                      </li> */}
                      <li className="contact">
                        <a href="/Home">
                          Contact Us <RiContactsLine />
                        </a>
                      </li>
                    </ul>
                  </nav>
                        <img src={imageFunction.mainAbout} alt="" />
                        <div className="profile-content">
                          {/* <span className="pro-name">Stepen</span> */}
                          <span className="pro-id">Name: {addr}</span>
                          <span className="pro-number">
                            {/* {window.location.origin.toString()}/{addr} */}
                          </span>
                          {/*  <span className="pro-number">
                                                    </span> */}
                          <button
                            className="top-btn coin-btn"
                            onClick={() => {
                              const reff =
                                window.location.origin.toString() +
                                "/" +
                                addr.toString();
                              navigator.clipboard.writeText(reff);
                            }}
                          >
                            Copy Link
                          </button>
                    <div className="dashboard-menu">
                      <ul>
                        <li className="active">
                          <a href="/Home">
                            <TiArrowForward /> Dashboard
                          </a>
                        </li>
                        <li>
                          <a href="/Home">
                            <TiBriefcase /> MY STAKED
                          </a>
                        </li>
                        <li>
                          <a href="/Home">
                            <AiOutlineGlobal /> MY NETWORK
                          </a>
                        </li>
                        <li>
                          <a href="/Home">
                            <AiOutlineDeploymentUnit /> MY BONUSES
                          </a>
                        </li>
                        <li> <li>
                          <a href="/Home">
                            <RiMoneyDollarCircleFill /> MY WITHDRAW
                          </a>
                        </li>
                        <li>
                          <a href="/Home">
                            <RiNotification2Line /> NOTIFICATION{" "}
                          </a>
                        </li>
                        <li>
                          <a href="/Home">
                            <RiSettings2Line /> SETTINGS
                          </a>
                        </li>
                        <li>
                          <a href="/Home">
                            <RiLockPasswordLine /> LOG OUT
                          </a>
                        </li>
                      </ul>
                        <button
                          className="user-btn coin-btn"
                          onClick={() => topup()}
                        >
                          REINVEST <MdAddTask />
                        </button>
                                                  className="user-btn coin-btn"
                          onClick={() => addRef()}
                        >
                          DEPOSTE <MdHourglassEmpty />
                        </button>
                        <button
                          className="user-btn color-btn"
                          href="#"
                          onClick={() => withdraw()}
                        >
                          WITHDRAW <MdOutlineSavings />
                        </button>
                      </div>
                    </div>
                    <div className="single-dash-head">
                      <div className="dashboard-amount d-flex flex-wrap align-items-center">
                        <div className="amount-content">
                          <span className="pro-name">DAILY RDB</span>
                          <span className="pro-money">${roi}</span>
                        </div>
                        <div className="invest-tumb">
                    <div className="single-dash-head">
                      <div className="dashboard-amount d-flex flex-wrap align-items-center">
                        <div className="amount-content">
                          <span className="pro-name">LEVEL RDB</span>
                          <span className="pro-money">${referralReward}</span>

                           </div>
                        <div className="invest-tumb">
                          <span className="pro-name">PACKAGE</span>
                          <span className="pro-money">${deposite}</span>
                        </div>
                        <div className="invest-tumb">
                          <img src={imageFunction.mainIcon3} alt="" />
                        </div>
                      </div>
                    </div>
                  </div>
                  {/* Starts */}
                  <div className="col-xl-4 col-lg-4 col-md-6">
                    <div className="single-dash-head">
                      <div className="dashboard-amount d-flex flex-wrap align-items-center">
                        <div className="amount-content">
                          <span className="pro-name">REWARDS</span>
                          <span className="pro-money">$0</span>
                        </div>
                         <div className="invest-tumb">
                          <img src="img/icon/d3.png" alt="" />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="col-xl-4 col-lg-4 col-md-6">
                    <div className="single-dash-head">
                      <div className="dashboard-amount d-flex flex-wrap align-items-center">
                        <div className="amount-content">
                          <span className="pro-name">MY DIRECTS</span>
                          <span className="pro-money">$0</span>
                        </div>
                        <div className="invest-tumb">
                          <img src="img/icon/d3.png" alt="" />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="col-xl-4 col-lg-4 col-md-6">
                    <div className="single-dash-head">
                      <div className="dashboard-amount d-flex flex-wrap align-items-center">
                        <div className="amount-content">
                          <span className="pro-name">MY LEVELS</span>
                          <span className="pro-money">$0</span>
                        </div>
                        <div className="invest-tumb">
                          <img src="img/icon/d3.png" alt="" />
                        </div>
                      </div>
                    </div>
                  </div>
                  {/* ends */}
                                            <span className="pro-money">${claimed}</span>
                        </div>
                        <div className="invest-tumb">
                          <img src={imageFunction.mainIcon3} alt="" />
                        </div>
                      </div>
                    </div>
                          <span className="pro-money">${deposite}</span>
                        </div>
                        <div className="invest-tumb">
                          <img src={imageFunction.mainIcon5} alt="" />
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="col-xl-4 col-lg-4 col-md-6">
                    <div className="single-dash-head">
                      <div className="dashboard-amount d-flex align-items-center">
                        <div className="amount-content">
                          <span className="pro-name">TOTAL REFFERALS</span>
                          <span className="pro-money">${referredCount}</span>

                            </div>
                        <div className="invest-tumb">
                          <img src={imageFunction.mainIcon6} alt="" />
                        </div>
                      </div>
                    </div>
  mainAbout,
  mainIcon1,
  mainIcon2,
  mainIcon3,
  mainIcon4,
  mainIcon5,
  mainIcon6,
};
export default Home;